/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.15 .\drop-in-ramp.glb -t 
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { Physics, RigidBody, RapierRigidBody, useRevoluteJoint, useFixedJoint, CylinderCollider, CuboidCollider } from "@react-three/rapier"

type GLTFResult = GLTF & {
  nodes: {
    Cube: THREE.Mesh
  }
  materials: {}
}

type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>>

export function DropInRamp(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/drop-in-ramp.glb') as GLTFResult
  return (
    <RigidBody colliders='trimesh' restitution={0}>
      <group {...props} dispose={null}>
        <mesh geometry={nodes.Cube.geometry} material={nodes.Cube.material} />
      </group>
    </RigidBody>
  )
}

useGLTF.preload('/drop-in-ramp.glb')
